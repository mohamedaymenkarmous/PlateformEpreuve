# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User : plaintext
        Securinets\UsersBundle\Entity\User:
            algorithm:   sha512
            iterations: 1
            encode_as_base64: false

    role_hierarchy:
        ROLE_CHALLENGER:       ROLE_USER


    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            #memory:~
            memory:
                users:
                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                    amjed:  { password: amjed, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        users_dataBase:
            entity : { class: SecurinetsUsersBundle:User, property : username}


    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            #anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html

            pattern : ^/
            anonymous : true
            provider: users_dataBase
            form_login:
                check_path: /login_check
                login_path: /login
                always_use_default_target_path: true
                default_target_path: /home
                #intention:                      authenticate
            logout :
                path: /logout
                target: /

    access_control:
#        - { path: ^/getLogin, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/getRules, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/rules, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/getScore, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/score, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/getStat, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/stat, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/challengerInfo, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/getRemaingTime, roles: IS_AUTHENTICATED_ANONYMOUSLY ,requires_channel: https }
        - { path: ^/ , roles : ROLE_CHALLENGER ,requires_channel: https }

